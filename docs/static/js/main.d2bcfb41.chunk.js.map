{"version":3,"sources":["components/AdddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrig.js","hooks/useFechGifs.js","GifExperApp.js","index.js"],"names":["AdddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","category","alert","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrig","loading","state","setstate","useEffect","then","imgs","setTimeout","useFechGifs","GifExpertaApp","categories","divRoot","document","querySelector","ReactDOM","render"],"mappings":";mMAIaA,EAAe,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACXC,mBAAS,IADE,mBACxCC,EADwC,KAC5BC,EAD4B,KAiB/C,OAEI,aADA,CACA,QAAMC,SAZU,SAACC,GACjBA,EAAEC,iBAEEJ,EAAWK,OAAOC,QAAU,GAC5BR,GAAc,SAAAS,GAAQ,OAAKP,GAAL,mBAAoBO,OAC1CN,EAAc,KAEbO,MAAM,uBAKX,SACI,uBACIC,KAAK,OACLC,MAAOV,EACPW,SApBc,SAACR,GACvBF,EAAcE,EAAES,OAAOF,a,QCNlBG,EAAc,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACrC,OACI,sBAAKC,UAAU,2BAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCGHK,EAAO,uCAAG,WAAOb,GAAP,uBAAAc,EAAA,6DAEbL,EAFa,iDAEmCM,UAAUf,GAF7C,+DAGAgB,MAAMP,GAHN,cAGbQ,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHf,GAAIe,EAAIf,GACRC,MAAOc,EAAId,MAEXC,IAAG,UAAEa,EAAIC,cAAN,aAAE,EAAYC,iBAAiBf,QAXvB,kBAeZW,GAfY,4CAAH,sDCoCLK,EAvCC,SAAC,GAAkB,IAAhBzB,EAAe,EAAfA,SAAe,ECDP,SAACA,GAAc,IAAD,EAEXR,mBAAS,CAC/B2B,KAAM,GACNO,SAAS,IAJwB,mBAE9BC,EAF8B,KAEvBC,EAFuB,KAuBrC,OAhBAC,qBAAU,WAENhB,EAAQb,GACH8B,MAAK,SAAAC,GACFC,YAAW,WACPJ,EAAS,CACLT,KAAMY,EACNL,SAAS,MAEd,UAIZ,CAAC1B,IAGG2B,EDf2BM,CAAYjC,GAAhCuB,EAPgB,EAOtBJ,KAAcO,EAPQ,EAORA,QAStB,OACI,qCAEI,6BAAK1B,IAEJ0B,EAAU,cAAgB,eAE3B,qBAAKhB,UAAU,oBAAf,SAGQa,EAAOF,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,eAA8BA,GAAZA,EAAIf,aEU/B2B,EAtCO,WAAM,MAMY1C,mBAAS,CAAC,WANtB,mBAMjB2C,EANiB,KAML5C,EANK,KAcxB,OAEI,qCACI,+CACA,cAAC,EAAD,CAAcA,cAAeA,IAC7B,uBAEA,6BAEQ4C,EAAWd,KAAI,SAAArB,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,YCzB3BoC,G,MAAYC,SAASC,cAAc,UAIzCC,IAASC,OAAO,cAAC,EAAD,IAAkBJ,K","file":"static/js/main.d2bcfb41.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n//*rafc patajo para carimport PropTypes from 'prop-types';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AdddCategory = ({ setCategories }) => {\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const hadleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (inputValue.trim().length >= 4) {\r\n            setCategories(category => [inputValue, ...category]);\r\n            setInputValue('')\r\n        }\r\n        else alert('4 carateres minimo')\r\n    }\r\n\r\n    return (\r\n        // puedes usar el form como contendor prilcipal \r\n        <form onSubmit={hadleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n//desirle que el prop es oblifgatorio\r\nAdddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired //requiere una funcion\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n    return (\r\n        <div className='targetas animate__bounce'>\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\n/*\r\nhelpers van aser funciones que asen un sierto trabajo en spesifico\r\npuden resivir argunmentos lo procesan y asen algun return \r\nque  falta que redibujen el state\r\n*/\r\n\r\n\r\nexport const getGifs = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=pbhjWS1EHyZ2sU3NSt0R9uezEIyBJ7kV`\r\n    const resp = await fetch(url)\r\n    const { data } = await resp.json()\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            // el signo de interrogaciom es para preguntar si vino\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs\r\n}","import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { GifGridItem } from './GifGridItem'\r\nimport { useFechGifs } from '../hooks/useFechGifs'\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nconst GifGrig = ({ category }) => {\r\n\r\n    // const [images, setImages] = useState([])\r\n\r\n    //!usa el useEfect poeque si tengo useState que es un boton y esta ariba de la funcion me va a ejecutar la funcion getFifs cada vez que lo toque porque el el state esta arriba del todo\r\n\r\n    //custoom hook (\"rembre data a images\")\r\n    const { data: images, loading } = useFechGifs(category)\r\n\r\n    /*\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(setImages)\r\n    }, [category])//le puse category como denpendencia para evitar un warning\r\n    */\r\n\r\n    return (\r\n        <>\r\n\r\n            <h3>{category}</h3>\r\n\r\n            {loading ? 'Cargando...' : 'Data cargada'}\r\n\r\n            <div className='container-targeta'>\r\n\r\n                {\r\n                    images.map((img) => (\r\n                        <GifGridItem key={img.id} {...img} />//si pongo los trs puntos puedo utilizar to las\r\n                        //priedades de img > id,title,url\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default GifGrig\r\n","//!cuando pongo el nombre (use) en un archivo significa que es un hook (pero no es nesesarip\\o)\r\nimport { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs'\r\n//los hook no son mas que funciones\r\n\r\nexport const useFechGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true,\r\n    })\r\n\r\n    useEffect(() => {  //los efectos no pueden ser async\r\n\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setTimeout(() => {\r\n                    setstate({\r\n                        data: imgs,  //recuerda aser lo en el mismo orden\r\n                        loading: false\r\n                    })\r\n                }, 2000)\r\n            })\r\n\r\n\r\n    }, [category])//este efecto va ejecutar uicamente cuando la categoria cambie\r\n\r\n\r\n    return state\r\n}","import React, { useState } from 'react';\r\nimport { AdddCategory } from './components/AdddCategory';\r\nimport GifGrig from './components/GifGrig';\r\n\r\n\r\nconst GifExpertaApp = () => {\r\n\r\n    //usa esta forma si la lista no va acambiar\r\n    // const categories = ['Naruto','One piece','Dragon Ball']\r\n\r\n    //el areglo es el valor inicial\r\n    const [categories, setCategories] = useState(['Naruto'])\r\n\r\n    //tarea : agrega elementos all useState\r\n    // const handleAdd = () =>{\r\n    //     setCategories([...categories,'Hunter x']);\r\n    //     setCategories(cts => [...cts,'Hunter x']);\r\n    // }\r\n\r\n    return (\r\n\r\n        <>\r\n            <h1>GifExpertaApp</h1>\r\n            <AdddCategory setCategories={setCategories} />\r\n            <hr></hr>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrig\r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n\r\n\r\n    )\r\n\r\n}\r\nexport default GifExpertaApp\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertaApp from './GifExperApp';\nimport './index.css';\n\nconst divRoot =   document.querySelector('#root')\n\n\n// ReactDOM.render(<App />,);\nReactDOM.render(<GifExpertaApp />,divRoot)\n\n\n//terea crea un compente:GifExpertaApp\n//<h2>GifExpertaApp</h2>\n//<hr>"],"sourceRoot":""}